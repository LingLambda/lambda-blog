---
import type { MyPlayedGame, PlayedGame } from "../utils/steamApi.ts";
import * as steamApi from "../utils/steamApi.ts";
import GameCard from "../components//GameCard.astro";

const appList: { applist: { apps: { appid: string; name: string }[] } } =
  await steamApi.getAppList();
  const apps = appList.applist.apps;

let playedGames: MyPlayedGame[] = (await steamApi.playedGames()).map(game => ({
  ...game,
  name: apps.find((app) => app.appid == game.appid)?.name || '',
  imgurl: steamApi.imageUrl(game.appid.toString())
}));
//TODO
// const otherGames = [{
//   name:'Escape from Tarkov',
//   imgurl: 'https://cdn.cloudflare.steamstatic.com/steam/apps/255710/header.jpg',
// }]
// playedGames.push()


playedGames = playedGames.filter((game) => game.playtime_forever > 1000);
// const ENABLE_REQUEST = import.meta.env.ENABLE_REQUEST || false;
// console.log(ENABLE_REQUEST);
// if (ENABLE_REQUEST === true) {
//   const appids = playedGames.map((game) => game.appid);
//   const appdetails = await steamApi.appdetails(appids);
//   appdetails.map();
// }


---

<div>
  {
    playedGames.map((game) => {
      const { appid, name, playtime_forever } = game;
      return (
        <GameCard
          appid={appid}
          name={name}
          playtime={playtime_forever}
          imgurl={steamApi.imageUrl(game.appid.toString())}
        />
      );
    })
  }
</div>

<style></style>
